/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Classes;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.lang.String;



/**
 *
 * @author Imad
 */
public class Fenetre extends javax.swing.JFrame {
   // Liste pour sauvgarder les objets qu'il va etre creer
      ArrayList<Vehicule> vehicules;
   //DefaulListe pour manipuler les elemens de la liste   
      DefaultListModel modeleListe;
   //Fichier ou je vais enregistrer mes donn√©es 
      File fichier;
   //Fichier ou ecrire
      FileWriter fw;
      PrintWriter pw;
      
      
      
    /** Creates new form Fenetre */
    public Fenetre() {
        initComponents();
        vehicules = new ArrayList<>();
        modeleListe= new DefaultListModel();
        
        //Gere les exception des fichier 
        
          try {
              fichier=new File ("fichier.veh");
              fw =new FileWriter(fichier);
              pw=new PrintWriter(fw);
          } catch (IOException ex) {
             ex.printStackTrace();
             
          }
       

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listeVehicules = new javax.swing.JList<>();
        btnSupprimer = new javax.swing.JButton();
        btnAjouter = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        btnFermer = new javax.swing.JButton();
        btnEnregistrer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listeVehicules.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listeVehicules);

        btnSupprimer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        btnAjouter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnModifier.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnFermer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFermer.setText("Fermer");
        btnFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFermerActionPerformed(evt);
            }
        });

        btnEnregistrer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEnregistrer.setText("Enregistrer");
        btnEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSupprimer)
                .addGap(11, 11, 11)
                .addComponent(btnModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnregistrer)
                .addGap(21, 21, 21)
                .addComponent(btnFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     // action lier a l'action Ajouter : fenetre1:marque,f2:imatruculation,f3:model
    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        Vehicule vehicule=null;
        String marque,modele,immatriculation; 
       // si on a autre que vehicule ; moto ou voiture ..
       String type;
       int nombrePortes,vitessMax,choix=0;
       boolean remorque;
       //pour type 
       type=JOptionPane.showInputDialog(this,"Entrer type du vehicule: Voiture / Camion / Moto","type",JOptionPane.PLAIN_MESSAGE);
        //le cas ou j'appuie sur cancel ou annuler
       if (type==null){
            
         }
         
        // s'il le choix voiture :________________________________________________________________________________
         else if (type.equalsIgnoreCase("Voiture")){  
        marque=JOptionPane.showInputDialog(this,"Entrer la marque du vehicule","Marque",JOptionPane.PLAIN_MESSAGE);
       //pour modele
       modele=JOptionPane.showInputDialog(this,"Entrer le modele  du vehicule","modele",JOptionPane.PLAIN_MESSAGE);
       //pour immatriculation
       immatriculation=JOptionPane.showInputDialog(this,"Entrer l'immatriculation du vehicule","immatriculation",JOptionPane.PLAIN_MESSAGE);
      //pour nbr de porte 
       
      nombrePortes=Integer.parseInt(JOptionPane.showInputDialog(this,"Entrer nombrePortes ","nombrePortes",JOptionPane.PLAIN_MESSAGE));
      vehicule= new Voiture(marque,immatriculation,modele,nombrePortes);
        //vehicules.add(vehicule);//ajouter a la list
       // modeleListe.add(0, vehicule);
        }
               // s'il le choix moto :________________________________________________________________________________
   
       else if (type.equalsIgnoreCase("Moto")){
       marque=JOptionPane.showInputDialog(this,"Entrer la marque du vehicule","Marque",JOptionPane.PLAIN_MESSAGE);
       //pour modele
       modele=JOptionPane.showInputDialog(this,"Entrer le modele  du vehicule","modele",JOptionPane.PLAIN_MESSAGE);
       //pour immatriculation
       immatriculation=JOptionPane.showInputDialog(this,"Entrer l'immatriculation du vehicule","immatriculation",JOptionPane.PLAIN_MESSAGE);
      
      //pour la vitess Max
      vitessMax=Integer.parseInt(JOptionPane.showInputDialog(this,"Entrer la vitess maximal ","vitessMax",JOptionPane.PLAIN_MESSAGE));

            vehicule= new Moto(marque, immatriculation,modele,vitessMax);
             //  vehicules.add(vehicule);
              // modeleListe.add(0, vehicule);


       }
       
            
         // s'il le choix Camion :________________________________________________________________________________
       else if  (type.equalsIgnoreCase("Camion")){
      
       marque=JOptionPane.showInputDialog(this,"Entrer la marque du vehicule","Marque",JOptionPane.PLAIN_MESSAGE);
       //pour modele
       modele=JOptionPane.showInputDialog(this,"Entrer le modele  du vehicule","modele",JOptionPane.PLAIN_MESSAGE);
       //pour immatriculation
       immatriculation=JOptionPane.showInputDialog(this,"Entrer l'immatriculation du vehicule","immatriculation",JOptionPane.PLAIN_MESSAGE);
       //Pour option remorque oui on no 
        choix= JOptionPane.showConfirmDialog(this,"Le camion a t-il le remorque ?","Remorque",JOptionPane.YES_NO_OPTION);
           if (choix==0)
               remorque=true;
           else
               remorque=false;
           
                   vehicule= new Camion(marque,immatriculation,modele,remorque);
                  // vehicules.add(vehicule);
                  // modeleListe.add(0, vehicule);


       }
          
        
    //choix tkhrbi9a_________________________________________________________________________________________________
         else 
          
     JOptionPane.showMessageDialog(this,"Votre choix est incorrect","choix incorrect",JOptionPane.OK_OPTION);    
       vehicules.add(vehicule);//ajouter a la liste 
       modeleListe.add(modeleListe.getSize(), vehicule); //pour manipuler liste
       listeVehicules.setModel(modeleListe);//mettre la relation
       
    }//GEN-LAST:event_btnAjouterActionPerformed
      


// action lier a l'action fermer :Creer une fenetre de dialog 
    private void btnFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFermerActionPerformed
       int choix= JOptionPane.showConfirmDialog(this,"Etes-vous sur de vouloir sortir ?", 
                "Confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (choix==0)
            System.exit(0);
    }//GEN-LAST:event_btnFermerActionPerformed

    private void btnEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnregistrerActionPerformed
  for (Vehicule v: vehicules){
      pw.println(v);
  }
  pw.close();

    }//GEN-LAST:event_btnEnregistrerActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
       //si je ne selectionne rien
       if (listeVehicules.isSelectionEmpty())
               JOptionPane.showMessageDialog(this,"Selectionner un vehicule a supprimer ",
                   "Pas de selection",JOptionPane.ERROR_MESSAGE);
       //si j'ai selectioner 
       else {
           int indice=listeVehicules.getSelectedIndex();
           modeleListe.remove(indice);
           vehicules.remove(indice);
       }
        
        
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        //
                String marque,modele,immatriculation; 
                int nombrePortes,vitessMax;
                boolean remorque;
                 //si je ne selectionne rien
       if (listeVehicules.isSelectionEmpty())
               JOptionPane.showMessageDialog(this,"Selectionner un vehicule a Modifier ",
                   "Pas de selection",JOptionPane.ERROR_MESSAGE);
              //si j'ai selectioner 
       else{
               int indice=listeVehicules.getSelectedIndex();
               Vehicule v = vehicules.get(indice); //je vais utiliser ces valeurs pour mettre dans les boites de dialogues
           //pour Vehicule::   
             //pour la marque
               marque= JOptionPane.showInputDialog(this,"Changer la marque",v.getMarque());
               v.setMarque(marque);
               //pour le model
               modele= JOptionPane.showInputDialog(this,"Changer le modele ",v.getModele());
               v.setModele(modele);
               //pour immatriculation 
               immatriculation= JOptionPane.showInputDialog(this,"Changer l'immatriculation",v.getImmatriculation());
               v.setImmatriculation(immatriculation);
            //pour Voiture::   
            if(v instanceof Voiture){
             nombrePortes = Integer.valueOf(JOptionPane.showInputDialog(this,"  Changer le nombre de porte ",
                     ((Voiture) v).getNombrePortes()));
               ((Voiture) v).setNombrePortes(nombrePortes);
                
       }
            
           //pour Camion::   
            else  if(v instanceof Camion){
                   remorque = JOptionPane.showConfirmDialog(this, " Le camion a-t-il la remorque ?   ",
                    "Remorque", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION;
                 boolean choix = remorque; 

                    ((Camion) v).setRemorque(choix);
           
       }
           //pour Moto:: 
                 else if(v instanceof Moto){
               vitessMax=Integer.valueOf(JOptionPane.showInputDialog(this ,"  Changer la vitess max  ",((Moto) v).getVitessMax())
               );
               ((Moto) v ).setVitessMax(vitessMax);
       }
           
           //chi tkharbi9a
           
              else{
                     JOptionPane.showMessageDialog(this,"Erreur Inconnue","Erreur",JOptionPane.ERROR_MESSAGE);
                        
                  }
              listeVehicules.setModel(modeleListe);
       

               

       }
 
        
    }//GEN-LAST:event_btnModifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 Fenetre f = new Fenetre();
                  f.setVisible(true);
                  f.setTitle("La Gestion d'un   Parking ");
                  f.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnEnregistrer;
    private javax.swing.JButton btnFermer;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listeVehicules;
    // End of variables declaration//GEN-END:variables

}
